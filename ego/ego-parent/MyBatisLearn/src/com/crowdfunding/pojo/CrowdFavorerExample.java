package com.crowdfunding.pojo;

import java.util.ArrayList;
import java.util.List;

public class CrowdFavorerExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public CrowdFavorerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUuidIsNull() {
            addCriterion("UUID is null");
            return (Criteria) this;
        }

        public Criteria andUuidIsNotNull() {
            addCriterion("UUID is not null");
            return (Criteria) this;
        }

        public Criteria andUuidEqualTo(String value) {
            addCriterion("UUID =", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotEqualTo(String value) {
            addCriterion("UUID <>", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThan(String value) {
            addCriterion("UUID >", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThanOrEqualTo(String value) {
            addCriterion("UUID >=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThan(String value) {
            addCriterion("UUID <", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThanOrEqualTo(String value) {
            addCriterion("UUID <=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLike(String value) {
            addCriterion("UUID like", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotLike(String value) {
            addCriterion("UUID not like", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidIn(List<String> values) {
            addCriterion("UUID in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotIn(List<String> values) {
            addCriterion("UUID not in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidBetween(String value1, String value2) {
            addCriterion("UUID between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotBetween(String value1, String value2) {
            addCriterion("UUID not between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidIsNull() {
            addCriterion("USER_UUID is null");
            return (Criteria) this;
        }

        public Criteria andUserUuidIsNotNull() {
            addCriterion("USER_UUID is not null");
            return (Criteria) this;
        }

        public Criteria andUserUuidEqualTo(String value) {
            addCriterion("USER_UUID =", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidNotEqualTo(String value) {
            addCriterion("USER_UUID <>", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidGreaterThan(String value) {
            addCriterion("USER_UUID >", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidGreaterThanOrEqualTo(String value) {
            addCriterion("USER_UUID >=", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidLessThan(String value) {
            addCriterion("USER_UUID <", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidLessThanOrEqualTo(String value) {
            addCriterion("USER_UUID <=", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidLike(String value) {
            addCriterion("USER_UUID like", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidNotLike(String value) {
            addCriterion("USER_UUID not like", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidIn(List<String> values) {
            addCriterion("USER_UUID in", values, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidNotIn(List<String> values) {
            addCriterion("USER_UUID not in", values, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidBetween(String value1, String value2) {
            addCriterion("USER_UUID between", value1, value2, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidNotBetween(String value1, String value2) {
            addCriterion("USER_UUID not between", value1, value2, "userUuid");
            return (Criteria) this;
        }

        public Criteria andProjUuidIsNull() {
            addCriterion("PROJ_UUID is null");
            return (Criteria) this;
        }

        public Criteria andProjUuidIsNotNull() {
            addCriterion("PROJ_UUID is not null");
            return (Criteria) this;
        }

        public Criteria andProjUuidEqualTo(String value) {
            addCriterion("PROJ_UUID =", value, "projUuid");
            return (Criteria) this;
        }

        public Criteria andProjUuidNotEqualTo(String value) {
            addCriterion("PROJ_UUID <>", value, "projUuid");
            return (Criteria) this;
        }

        public Criteria andProjUuidGreaterThan(String value) {
            addCriterion("PROJ_UUID >", value, "projUuid");
            return (Criteria) this;
        }

        public Criteria andProjUuidGreaterThanOrEqualTo(String value) {
            addCriterion("PROJ_UUID >=", value, "projUuid");
            return (Criteria) this;
        }

        public Criteria andProjUuidLessThan(String value) {
            addCriterion("PROJ_UUID <", value, "projUuid");
            return (Criteria) this;
        }

        public Criteria andProjUuidLessThanOrEqualTo(String value) {
            addCriterion("PROJ_UUID <=", value, "projUuid");
            return (Criteria) this;
        }

        public Criteria andProjUuidLike(String value) {
            addCriterion("PROJ_UUID like", value, "projUuid");
            return (Criteria) this;
        }

        public Criteria andProjUuidNotLike(String value) {
            addCriterion("PROJ_UUID not like", value, "projUuid");
            return (Criteria) this;
        }

        public Criteria andProjUuidIn(List<String> values) {
            addCriterion("PROJ_UUID in", values, "projUuid");
            return (Criteria) this;
        }

        public Criteria andProjUuidNotIn(List<String> values) {
            addCriterion("PROJ_UUID not in", values, "projUuid");
            return (Criteria) this;
        }

        public Criteria andProjUuidBetween(String value1, String value2) {
            addCriterion("PROJ_UUID between", value1, value2, "projUuid");
            return (Criteria) this;
        }

        public Criteria andProjUuidNotBetween(String value1, String value2) {
            addCriterion("PROJ_UUID not between", value1, value2, "projUuid");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeIsNull() {
            addCriterion("FAVORER_DATETIME is null");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeIsNotNull() {
            addCriterion("FAVORER_DATETIME is not null");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeEqualTo(String value) {
            addCriterion("FAVORER_DATETIME =", value, "favorerDatetime");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeNotEqualTo(String value) {
            addCriterion("FAVORER_DATETIME <>", value, "favorerDatetime");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeGreaterThan(String value) {
            addCriterion("FAVORER_DATETIME >", value, "favorerDatetime");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeGreaterThanOrEqualTo(String value) {
            addCriterion("FAVORER_DATETIME >=", value, "favorerDatetime");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeLessThan(String value) {
            addCriterion("FAVORER_DATETIME <", value, "favorerDatetime");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeLessThanOrEqualTo(String value) {
            addCriterion("FAVORER_DATETIME <=", value, "favorerDatetime");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeLike(String value) {
            addCriterion("FAVORER_DATETIME like", value, "favorerDatetime");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeNotLike(String value) {
            addCriterion("FAVORER_DATETIME not like", value, "favorerDatetime");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeIn(List<String> values) {
            addCriterion("FAVORER_DATETIME in", values, "favorerDatetime");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeNotIn(List<String> values) {
            addCriterion("FAVORER_DATETIME not in", values, "favorerDatetime");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeBetween(String value1, String value2) {
            addCriterion("FAVORER_DATETIME between", value1, value2, "favorerDatetime");
            return (Criteria) this;
        }

        public Criteria andFavorerDatetimeNotBetween(String value1, String value2) {
            addCriterion("FAVORER_DATETIME not between", value1, value2, "favorerDatetime");
            return (Criteria) this;
        }

        public Criteria andAccountUuidIsNull() {
            addCriterion("ACCOUNT_UUID is null");
            return (Criteria) this;
        }

        public Criteria andAccountUuidIsNotNull() {
            addCriterion("ACCOUNT_UUID is not null");
            return (Criteria) this;
        }

        public Criteria andAccountUuidEqualTo(String value) {
            addCriterion("ACCOUNT_UUID =", value, "accountUuid");
            return (Criteria) this;
        }

        public Criteria andAccountUuidNotEqualTo(String value) {
            addCriterion("ACCOUNT_UUID <>", value, "accountUuid");
            return (Criteria) this;
        }

        public Criteria andAccountUuidGreaterThan(String value) {
            addCriterion("ACCOUNT_UUID >", value, "accountUuid");
            return (Criteria) this;
        }

        public Criteria andAccountUuidGreaterThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_UUID >=", value, "accountUuid");
            return (Criteria) this;
        }

        public Criteria andAccountUuidLessThan(String value) {
            addCriterion("ACCOUNT_UUID <", value, "accountUuid");
            return (Criteria) this;
        }

        public Criteria andAccountUuidLessThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_UUID <=", value, "accountUuid");
            return (Criteria) this;
        }

        public Criteria andAccountUuidLike(String value) {
            addCriterion("ACCOUNT_UUID like", value, "accountUuid");
            return (Criteria) this;
        }

        public Criteria andAccountUuidNotLike(String value) {
            addCriterion("ACCOUNT_UUID not like", value, "accountUuid");
            return (Criteria) this;
        }

        public Criteria andAccountUuidIn(List<String> values) {
            addCriterion("ACCOUNT_UUID in", values, "accountUuid");
            return (Criteria) this;
        }

        public Criteria andAccountUuidNotIn(List<String> values) {
            addCriterion("ACCOUNT_UUID not in", values, "accountUuid");
            return (Criteria) this;
        }

        public Criteria andAccountUuidBetween(String value1, String value2) {
            addCriterion("ACCOUNT_UUID between", value1, value2, "accountUuid");
            return (Criteria) this;
        }

        public Criteria andAccountUuidNotBetween(String value1, String value2) {
            addCriterion("ACCOUNT_UUID not between", value1, value2, "accountUuid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table crowd_favorer
     *
     * @mbg.generated do_not_delete_during_merge Fri Sep 21 13:43:03 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table crowd_favorer
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
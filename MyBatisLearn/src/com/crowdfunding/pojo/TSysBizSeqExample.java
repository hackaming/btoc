package com.crowdfunding.pojo;

import java.util.ArrayList;
import java.util.List;

public class TSysBizSeqExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public TSysBizSeqExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSeqNameIsNull() {
            addCriterion("SEQ_NAME is null");
            return (Criteria) this;
        }

        public Criteria andSeqNameIsNotNull() {
            addCriterion("SEQ_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andSeqNameEqualTo(String value) {
            addCriterion("SEQ_NAME =", value, "seqName");
            return (Criteria) this;
        }

        public Criteria andSeqNameNotEqualTo(String value) {
            addCriterion("SEQ_NAME <>", value, "seqName");
            return (Criteria) this;
        }

        public Criteria andSeqNameGreaterThan(String value) {
            addCriterion("SEQ_NAME >", value, "seqName");
            return (Criteria) this;
        }

        public Criteria andSeqNameGreaterThanOrEqualTo(String value) {
            addCriterion("SEQ_NAME >=", value, "seqName");
            return (Criteria) this;
        }

        public Criteria andSeqNameLessThan(String value) {
            addCriterion("SEQ_NAME <", value, "seqName");
            return (Criteria) this;
        }

        public Criteria andSeqNameLessThanOrEqualTo(String value) {
            addCriterion("SEQ_NAME <=", value, "seqName");
            return (Criteria) this;
        }

        public Criteria andSeqNameLike(String value) {
            addCriterion("SEQ_NAME like", value, "seqName");
            return (Criteria) this;
        }

        public Criteria andSeqNameNotLike(String value) {
            addCriterion("SEQ_NAME not like", value, "seqName");
            return (Criteria) this;
        }

        public Criteria andSeqNameIn(List<String> values) {
            addCriterion("SEQ_NAME in", values, "seqName");
            return (Criteria) this;
        }

        public Criteria andSeqNameNotIn(List<String> values) {
            addCriterion("SEQ_NAME not in", values, "seqName");
            return (Criteria) this;
        }

        public Criteria andSeqNameBetween(String value1, String value2) {
            addCriterion("SEQ_NAME between", value1, value2, "seqName");
            return (Criteria) this;
        }

        public Criteria andSeqNameNotBetween(String value1, String value2) {
            addCriterion("SEQ_NAME not between", value1, value2, "seqName");
            return (Criteria) this;
        }

        public Criteria andCurrentValueIsNull() {
            addCriterion("CURRENT_VALUE is null");
            return (Criteria) this;
        }

        public Criteria andCurrentValueIsNotNull() {
            addCriterion("CURRENT_VALUE is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentValueEqualTo(Long value) {
            addCriterion("CURRENT_VALUE =", value, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueNotEqualTo(Long value) {
            addCriterion("CURRENT_VALUE <>", value, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueGreaterThan(Long value) {
            addCriterion("CURRENT_VALUE >", value, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueGreaterThanOrEqualTo(Long value) {
            addCriterion("CURRENT_VALUE >=", value, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueLessThan(Long value) {
            addCriterion("CURRENT_VALUE <", value, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueLessThanOrEqualTo(Long value) {
            addCriterion("CURRENT_VALUE <=", value, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueIn(List<Long> values) {
            addCriterion("CURRENT_VALUE in", values, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueNotIn(List<Long> values) {
            addCriterion("CURRENT_VALUE not in", values, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueBetween(Long value1, Long value2) {
            addCriterion("CURRENT_VALUE between", value1, value2, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueNotBetween(Long value1, Long value2) {
            addCriterion("CURRENT_VALUE not between", value1, value2, "currentValue");
            return (Criteria) this;
        }

        public Criteria andIncrementIsNull() {
            addCriterion("INCREMENT is null");
            return (Criteria) this;
        }

        public Criteria andIncrementIsNotNull() {
            addCriterion("INCREMENT is not null");
            return (Criteria) this;
        }

        public Criteria andIncrementEqualTo(Integer value) {
            addCriterion("INCREMENT =", value, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementNotEqualTo(Integer value) {
            addCriterion("INCREMENT <>", value, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementGreaterThan(Integer value) {
            addCriterion("INCREMENT >", value, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementGreaterThanOrEqualTo(Integer value) {
            addCriterion("INCREMENT >=", value, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementLessThan(Integer value) {
            addCriterion("INCREMENT <", value, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementLessThanOrEqualTo(Integer value) {
            addCriterion("INCREMENT <=", value, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementIn(List<Integer> values) {
            addCriterion("INCREMENT in", values, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementNotIn(List<Integer> values) {
            addCriterion("INCREMENT not in", values, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementBetween(Integer value1, Integer value2) {
            addCriterion("INCREMENT between", value1, value2, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementNotBetween(Integer value1, Integer value2) {
            addCriterion("INCREMENT not between", value1, value2, "increment");
            return (Criteria) this;
        }

        public Criteria andSeqDescIsNull() {
            addCriterion("SEQ_DESC is null");
            return (Criteria) this;
        }

        public Criteria andSeqDescIsNotNull() {
            addCriterion("SEQ_DESC is not null");
            return (Criteria) this;
        }

        public Criteria andSeqDescEqualTo(String value) {
            addCriterion("SEQ_DESC =", value, "seqDesc");
            return (Criteria) this;
        }

        public Criteria andSeqDescNotEqualTo(String value) {
            addCriterion("SEQ_DESC <>", value, "seqDesc");
            return (Criteria) this;
        }

        public Criteria andSeqDescGreaterThan(String value) {
            addCriterion("SEQ_DESC >", value, "seqDesc");
            return (Criteria) this;
        }

        public Criteria andSeqDescGreaterThanOrEqualTo(String value) {
            addCriterion("SEQ_DESC >=", value, "seqDesc");
            return (Criteria) this;
        }

        public Criteria andSeqDescLessThan(String value) {
            addCriterion("SEQ_DESC <", value, "seqDesc");
            return (Criteria) this;
        }

        public Criteria andSeqDescLessThanOrEqualTo(String value) {
            addCriterion("SEQ_DESC <=", value, "seqDesc");
            return (Criteria) this;
        }

        public Criteria andSeqDescLike(String value) {
            addCriterion("SEQ_DESC like", value, "seqDesc");
            return (Criteria) this;
        }

        public Criteria andSeqDescNotLike(String value) {
            addCriterion("SEQ_DESC not like", value, "seqDesc");
            return (Criteria) this;
        }

        public Criteria andSeqDescIn(List<String> values) {
            addCriterion("SEQ_DESC in", values, "seqDesc");
            return (Criteria) this;
        }

        public Criteria andSeqDescNotIn(List<String> values) {
            addCriterion("SEQ_DESC not in", values, "seqDesc");
            return (Criteria) this;
        }

        public Criteria andSeqDescBetween(String value1, String value2) {
            addCriterion("SEQ_DESC between", value1, value2, "seqDesc");
            return (Criteria) this;
        }

        public Criteria andSeqDescNotBetween(String value1, String value2) {
            addCriterion("SEQ_DESC not between", value1, value2, "seqDesc");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated do_not_delete_during_merge Fri Sep 21 13:43:03 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_sys_biz_seq
     *
     * @mbg.generated Fri Sep 21 13:43:03 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}